name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npm run check
      
    - name: Build project
      run: npm run vercel-build
      env:
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        NODE_ENV: production
        
    - name: Deploy to Vercel
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: vercel_deploy
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF_NAME: ${{ github.ref_name }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_AUTHOR_USERNAME: ${{ github.event.head_commit.author.username }}
      run: |
        set -euo pipefail

        if [[ -z "${VERCEL_TOKEN:-}" ]]; then
          echo "::error::VERCEL_TOKEN is not configured" >&2
          exit 1
        fi

        # Sanitize commit metadata for CLI meta flags
        AUTHOR_LOGIN=${GITHUB_AUTHOR_USERNAME:-$GITHUB_ACTOR}

        LOG_FILE=$(mktemp)

        npx --yes vercel@25.1.0 deploy \
          --prod \
          --force \
          --confirm \
          --token "$VERCEL_TOKEN" \
          --meta githubDeployment=1 \
          --meta "githubCommitSha=$GITHUB_SHA" \
          --meta "githubCommitRef=$GITHUB_REF_NAME" \
          --meta "githubOrg=$GITHUB_REPOSITORY_OWNER" \
          --meta "githubRepo=$GITHUB_REPOSITORY" \
          --meta "githubCommitOrg=$GITHUB_REPOSITORY_OWNER" \
          --meta "githubCommitRepo=$GITHUB_REPOSITORY" \
          --meta "githubCommitAuthorLogin=$AUTHOR_LOGIN" \
          | tee "$LOG_FILE"

        PROD_URL=$(grep -Eo 'https://[^ ]+vercel\.app' "$LOG_FILE" | tail -n1 || true)

        if [[ -n "$PROD_URL" ]]; then
          echo "production_url=$PROD_URL" >> "$GITHUB_OUTPUT"
        fi

        rm -f "$LOG_FILE"
